Index: app/src/main/java/ca/gbc/comp3074/mind_manager_app/BookDisplayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.gbc.comp3074.mind_manager_app;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport ca.gbc.comp3074.mind_manager_app.Models.BookAdapter;\r\nimport ca.gbc.comp3074.mind_manager_app.Models.BookInfo;\r\n\r\npublic class BookDisplayActivity extends AppCompatActivity {\r\n\r\n\r\n\r\n    // creating variables for our request queue,\r\n    // array list, progressbar, edittext,\r\n    // image button and our recycler view.\r\n    private RequestQueue mRequestQueue;\r\n    private ArrayList<BookInfo> bookInfoArrayList;\r\n    private ProgressBar progressBar;\r\n    private EditText searchEdt;\r\n    private ImageButton searchBtn;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.book_display);\r\n        Intent intent = getIntent();\r\n        final String moodTitle = intent.getStringExtra(\"Mood\");\r\n\r\n\r\n                getBooksInfo(\"The Lord of The Rings\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private void getBooksInfo(String query) {\r\n\r\n        // creating a new array list.\r\n        bookInfoArrayList = new ArrayList<>();\r\n\r\n        // below line is use to initialize\r\n        // the variable for our request queue.\r\n        mRequestQueue = Volley.newRequestQueue(BookDisplayActivity.this);\r\n\r\n        // below line is use to clear cache this\r\n        // will be use when our data is being updated.\r\n        mRequestQueue.getCache().clear();\r\n\r\n        // below is the url for getting data from API in json format.\r\n        String url = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\r\n\r\n        // below line we are creating a new request queue.\r\n        RequestQueue queue = Volley.newRequestQueue(BookDisplayActivity.this);\r\n\r\n\r\n        // below line is use to make json object request inside that we\r\n        // are passing url, get method and getting json object. .\r\n        JsonObjectRequest booksObjrequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n                //progressBar.setVisibility(View.GONE);\r\n                // inside on response method we are extracting all our json data.\r\n                try {\r\n                    JSONArray itemsArray = response.getJSONArray(\"items\");\r\n                    for (int i = 0; i < 1; i++) {\r\n                        JSONObject itemsObj = itemsArray.getJSONObject(i);\r\n                        JSONObject volumeObj = itemsObj.getJSONObject(\"volumeInfo\");\r\n                        String title = volumeObj.optString(\"title\");\r\n                        String subtitle = volumeObj.optString(\"subtitle\");\r\n                        JSONArray authorsArray = volumeObj.getJSONArray(\"authors\");\r\n                        String publisher = volumeObj.optString(\"publisher\");\r\n                        String publishedDate = volumeObj.optString(\"publishedDate\");\r\n                        String description = volumeObj.optString(\"description\");\r\n                        int pageCount = volumeObj.optInt(\"pageCount\");\r\n                        JSONObject imageLinks = volumeObj.optJSONObject(\"imageLinks\");\r\n                        String thumbnail = imageLinks.optString(\"thumbnail\");\r\n                        String previewLink = volumeObj.optString(\"previewLink\");\r\n                        String infoLink = volumeObj.optString(\"infoLink\");\r\n                        JSONObject saleInfoObj = itemsObj.optJSONObject(\"saleInfo\");\r\n                        String buyLink = saleInfoObj.optString(\"buyLink\");\r\n                        ArrayList<String> authorsArrayList = new ArrayList<>();\r\n                        if (authorsArray.length() != 0) {\r\n                            for (int j = 0; j < authorsArray.length(); j++) {\r\n                                authorsArrayList.add(authorsArray.optString(i));\r\n                            }\r\n                        }\r\n                        // after extracting all the data we are\r\n                        // saving this data in our modal class.\r\n                        BookInfo bookInfo = new BookInfo(title, subtitle, authorsArrayList, publisher, publishedDate, description, pageCount, thumbnail, previewLink, infoLink, buyLink);\r\n\r\n                        // below line is use to pass our modal\r\n                        // class in our array list.\r\n                        bookInfoArrayList.add(bookInfo);\r\n\r\n                        // below line is use to pass our\r\n                        // array list in adapter class.\r\n                        BookAdapter adapter = new BookAdapter(bookInfoArrayList, BookDisplayActivity.this);\r\n\r\n                        // below line is use to add linear layout\r\n                        // manager for our recycler view.\r\n                        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(BookDisplayActivity.this, RecyclerView.VERTICAL, false);\r\n                        RecyclerView mRecyclerView = (RecyclerView) findViewById(R.id.idRVBooks);\r\n\r\n                        // in below line we are setting layout manager and\r\n                        // adapter to our recycler view.\r\n                        mRecyclerView.setLayoutManager(linearLayoutManager);\r\n                        mRecyclerView.setAdapter(adapter);\r\n                    }\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                    // displaying a toast message when we get any error from API\r\n                    Toast.makeText(BookDisplayActivity.this, \"No Data Found\" + e, Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                // also displaying error message in toast.\r\n                Toast.makeText(BookDisplayActivity.this, \"Error found is \" + error, Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n        // at last we are adding our json object\r\n        // request in our request queue.\r\n        queue.add(booksObjrequest);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ca/gbc/comp3074/mind_manager_app/BookDisplayActivity.java	(revision aba6f74d60c7ebd45d079d278091a46577e84d15)
+++ app/src/main/java/ca/gbc/comp3074/mind_manager_app/BookDisplayActivity.java	(date 1616706533098)
@@ -48,10 +48,14 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.book_display);
         Intent intent = getIntent();
-        final String moodTitle = intent.getStringExtra("Mood");
+        //final String moodTitle = intent.getStringExtra("Mood");
+
+        //String var = fucntion(moodtitle)
+        //string var = moodtitle
 
 
-                getBooksInfo("The Lord of The Rings");
+
+                getBooksInfo("Forest Bathing: How Trees Can Help You Find Health and Happiness");
 
 
     }
@@ -91,7 +95,7 @@
                 // inside on response method we are extracting all our json data.
                 try {
                     JSONArray itemsArray = response.getJSONArray("items");
-                    for (int i = 0; i < 1; i++) {
+                    for (int i = 0; i < 5; i++) {
                         JSONObject itemsObj = itemsArray.getJSONObject(i);
                         JSONObject volumeObj = itemsObj.getJSONObject("volumeInfo");
                         String title = volumeObj.optString("title");
Index: app/src/main/java/ca/gbc/comp3074/mind_manager_app/SuggestionsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.gbc.comp3074.mind_manager_app;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.android.volley.RequestQueue;\r\nimport java.util.ArrayList;\r\n//import com.google.android.gms.common.api.Response;\r\nimport java.sql.Connection;\r\nimport ca.gbc.comp3074.mind_manager_app.Games.CrosswordGameActivity;\r\nimport ca.gbc.comp3074.mind_manager_app.Games.TriviaGameActivity;\r\nimport ca.gbc.comp3074.mind_manager_app.Models.BookDetails;\r\nimport ca.gbc.comp3074.mind_manager_app.Models.BookInfo;\r\nimport ca.gbc.comp3074.mind_manager_app.Models.Suggestion;\r\nimport ca.gbc.comp3074.mind_manager_app.Models.SuggestionArrayAdapter;\r\n\r\npublic class SuggestionsActivity extends AppCompatActivity {\r\n\r\n    ListView listView;\r\n    private RequestQueue mRequestQueue; ///////////added\r\n    private ArrayList<BookInfo> bookInfoArrayList; /////////////added\r\n    String musicVideo = \"\";\r\n    String title1 = \"\";\r\n    final Suggestion musicSuggestion = new Suggestion();\r\n    final Suggestion sportSuggestion = new Suggestion();\r\n    final Suggestion outDoorSuggestion = new Suggestion();\r\n    final Suggestion gameSuggestion = new Suggestion();\r\n    final Suggestion poetrySuggestion = new Suggestion();\r\n\r\n    String categoriesTitle[] = {musicSuggestion.getCategoryName(), sportSuggestion.getCategoryName(),\r\n            outDoorSuggestion.getCategoryName(), gameSuggestion.getCategoryName(), poetrySuggestion.getCategoryName()};\r\n\r\n    String suggestionsName[] = {musicSuggestion.getSuggestionName(), sportSuggestion.getSuggestionName(),\r\n        outDoorSuggestion.getSuggestionName(), gameSuggestion.getSuggestionName(), poetrySuggestion.getSuggestionName()};\r\n\r\n    int images[] = {R.drawable.music, R.drawable.sports, R.drawable.outdoors, R.drawable.games, R.drawable.reading};\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_suggestions);\r\n        musicSuggestion.setCategoryName(\"Music\");\r\n        sportSuggestion.setCategoryName(\"Sport\");\r\n        outDoorSuggestion.setCategoryName(\"Outdoors\");\r\n        gameSuggestion.setCategoryName(\"Games\");\r\n        poetrySuggestion.setCategoryName(\"Reading\");\r\n\r\n        listView = findViewById(R.id.listView);\r\n        final ArrayList<Suggestion> suggestions = new ArrayList<>();\r\n\r\n        TextView title = findViewById(R.id.lblTitle);\r\n        Intent intent = getIntent();\r\n        final String moodTitle = intent.getStringExtra(\"Mood\");\r\n\r\n        title.setText(\"Here are your suggestions for being more \" + moodTitle);\r\n        //Database instance\r\n        final GoogleMySQLConnectionHelper db = new GoogleMySQLConnectionHelper();\r\n        final Connection connect = db.connectionclass();\r\n\r\n\r\n        if (moodTitle.equals(\"Calmer\")) {\r\n            Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n            musicVideo= music.getYoutubeLink();\r\n            musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n            musicSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Music\").getSuggestionName());\r\n            sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n            outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n            gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n            poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n        }\r\n\r\n        if (moodTitle.equals(\"Energetic\")) {\r\n            Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n            musicVideo= music.getYoutubeLink();\r\n            musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n            sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n            outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n            gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n            poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n        }\r\n\r\n        if (moodTitle.equals(\"Happier\")) {\r\n            Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n            musicVideo= music.getYoutubeLink();\r\n            musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n            sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n            outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n            gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n            poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n        }\r\n\r\n        if (moodTitle.equals(\"Moody\")) {\r\n            Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n            musicVideo= music.getYoutubeLink();\r\n            musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n            sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n            outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n            gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n            poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n        }\r\n\r\n        if (moodTitle.equals(\"Relaxed\")) {\r\n            Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n            musicVideo= music.getYoutubeLink();\r\n            musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n            sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n            outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n            gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n            poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n        }\r\n\r\n        //functionality for btnRandom\r\n        ImageButton btnRandom = findViewById(R.id.btnRandom);\r\n        btnRandom.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                suggestions.remove(musicSuggestion);\r\n                suggestions.remove(sportSuggestion);\r\n                suggestions.remove(outDoorSuggestion);\r\n                suggestions.remove(gameSuggestion);\r\n                suggestions.remove(poetrySuggestion);\r\n\r\n                if (moodTitle.equals(\"Calmer\")) {\r\n                    Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n                    musicVideo= music.getYoutubeLink();\r\n                    musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n                    sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n                    outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n                    gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n                    poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n                }\r\n\r\n                if (moodTitle.equals(\"Energetic\")) {\r\n                    Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n                    musicVideo= music.getYoutubeLink();\r\n                    musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n                    sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n                    outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n                    gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n                    poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n                }\r\n\r\n                if (moodTitle.equals(\"Happier\")) {\r\n                    Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n                    musicVideo= music.getYoutubeLink();\r\n                    musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n                    sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n                    outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n                    gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n                    poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n                }\r\n\r\n                if (moodTitle.equals(\"Moody\")) {\r\n                    Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n                    musicVideo= music.getYoutubeLink();\r\n                    musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n                    sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n                    outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n                    gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n                    poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n                }\r\n\r\n                if (moodTitle.equals(\"Relaxed\")) {\r\n                    Suggestion music = db.getSuggestion(connect, moodTitle, \"Music\");\r\n                    musicVideo= music.getYoutubeLink();\r\n                    musicSuggestion.setSuggestionName(music.getSuggestionName());\r\n                    sportSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Sport\").getSuggestionName());\r\n                    outDoorSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Outdoors\").getSuggestionName());\r\n                    gameSuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Games\").getSuggestionName());\r\n                    poetrySuggestion.setSuggestionName(db.getSuggestion(connect, moodTitle, \"Reading\").getSuggestionName());\r\n                }\r\n            }\r\n        });\r\n\r\n        suggestions.add(musicSuggestion);\r\n        suggestions.add(sportSuggestion);\r\n        suggestions.add(outDoorSuggestion);\r\n        suggestions.add(gameSuggestion);\r\n        suggestions.add(poetrySuggestion);\r\n\r\n        SuggestionArrayAdapter adapter = new SuggestionArrayAdapter(this,R.layout.row_layout_suggestions, suggestions, images);\r\n\r\n        listView.setAdapter(adapter);\r\n        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                if (position == 0){\r\n\r\n                    Intent i = new Intent(SuggestionsActivity.this, VideoMain.class);\r\n\r\n                    i.putExtra(\"MyParameter\", musicVideo);\r\n                    startActivity(i);\r\n                }\r\n                if (position == 1){\r\n                    Intent start = new Intent(getApplicationContext(), MainActivity.class);\r\n                    startActivity(start);\r\n                }\r\n                if (position == 2){\r\n                    Intent start = new Intent(getApplicationContext(), QuestionsActivity.class);\r\n                    startActivity(start);\r\n                }\r\n                if (position == 3){\r\n                    Intent start = new Intent(getApplicationContext(), TriviaGameActivity.class);\r\n                    startActivity(start);\r\n                }\r\n                if (position == 4){\r\n                    Intent start = new Intent(getApplicationContext(), BookDisplayActivity.class);\r\n                    startActivity(start);\r\n                }\r\n            }\r\n        });\r\n        ImageButton btnMap = findViewById(R.id.btn_map);\r\n        btnMap.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //openMap();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Open the Map Page\r\n    private void openMap(){\r\n        Intent start = new Intent(getApplicationContext(), MapActivity.class);\r\n        startActivity(start);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ca/gbc/comp3074/mind_manager_app/SuggestionsActivity.java	(revision aba6f74d60c7ebd45d079d278091a46577e84d15)
+++ app/src/main/java/ca/gbc/comp3074/mind_manager_app/SuggestionsActivity.java	(date 1616608209226)
@@ -207,7 +207,7 @@
                     startActivity(start);
                 }
                 if (position == 3){
-                    Intent start = new Intent(getApplicationContext(), TriviaGameActivity.class);
+                    Intent start = new Intent(getApplicationContext(), CrosswordGameActivity.class);
                     startActivity(start);
                 }
                 if (position == 4){
Index: app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.gbc.comp3074.mind_manager_app.Models;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport ca.gbc.comp3074.mind_manager_app.R;\r\n\r\npublic class BookAdapter extends RecyclerView.Adapter<BookAdapter.BookViewHolder> {\r\n\r\n    // creating variables for arraylist and context.\r\n    private ArrayList<BookInfo> bookInfoArrayList;\r\n    private Context mcontext;\r\n\r\n    // creating constructor for array list and context.\r\n    public BookAdapter(ArrayList<BookInfo> bookInfoArrayList, Context mcontext) {\r\n        this.bookInfoArrayList = bookInfoArrayList;\r\n        this.mcontext = mcontext;\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public BookViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // inflating our layout for item of recycler view item.\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.book_rv_item, parent, false);\r\n        return new BookViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull BookViewHolder holder, int position) {\r\n\r\n        // inside on bind view holder method we are\r\n        // setting ou data to each UI component.\r\n        final BookInfo bookInfo = bookInfoArrayList.get(position);\r\n        holder.nameTV.setText(bookInfo.getTitle());\r\n        holder.publisherTV.setText(bookInfo.getPublisher());\r\n        holder.pageCountTV.setText(\"No of Pages : \" + bookInfo.getPageCount());\r\n        holder.dateTV.setText(bookInfo.getPublishedDate());\r\n\r\n        // below line is use to set image from URL in our image view.\r\n        //Picasso.get().load(bookInfo.getThumbnail()).into(holder.bookIV);\r\n\r\n       //  below line is use to add on click listener for our item of recycler view.\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                // inside on click listener method we are calling a new activity\r\n                // and passing all the data of that item in next intent.\r\n                Intent i = new Intent(mcontext, BookDetails.class);\r\n                i.putExtra(\"title\", bookInfo.getTitle());\r\n                i.putExtra(\"subtitle\", bookInfo.getSubtitle());\r\n                i.putExtra(\"authors\", bookInfo.getAuthors());\r\n                i.putExtra(\"publisher\", bookInfo.getPublisher());\r\n                i.putExtra(\"publishedDate\", bookInfo.getPublishedDate());\r\n                i.putExtra(\"description\", bookInfo.getDescription());\r\n                i.putExtra(\"pageCount\", bookInfo.getPageCount());\r\n                i.putExtra(\"thumbnail\", bookInfo.getThumbnail());\r\n                i.putExtra(\"previewLink\", bookInfo.getPreviewLink());\r\n                i.putExtra(\"infoLink\", bookInfo.getInfoLink());\r\n                i.putExtra(\"buyLink\", bookInfo.getBuyLink());\r\n\r\n                // after passing that data we are\r\n                // starting our new intent.\r\n                mcontext.startActivity(i);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        // inside get item count method we\r\n        // are returning the size of our array list.\r\n        return bookInfoArrayList.size();\r\n    }\r\n\r\n    public class BookViewHolder extends RecyclerView.ViewHolder {\r\n        // below line is use to initialize\r\n        // our text view and image views.\r\n        TextView nameTV, publisherTV, pageCountTV, dateTV;\r\n        ImageView bookIV;\r\n\r\n        public BookViewHolder(View itemView) {\r\n            super(itemView);\r\n            nameTV = itemView.findViewById(R.id.idTVBookTitle);\r\n            publisherTV = itemView.findViewById(R.id.idTVpublisher);\r\n            pageCountTV = itemView.findViewById(R.id.idTVPageCount);\r\n            dateTV = itemView.findViewById(R.id.idTVDate);\r\n            bookIV = itemView.findViewById(R.id.idIVbook);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookAdapter.java	(revision aba6f74d60c7ebd45d079d278091a46577e84d15)
+++ app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookAdapter.java	(date 1616605796320)
@@ -10,6 +10,8 @@
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.squareup.picasso.Picasso;
+
 import java.util.ArrayList;
 
 import ca.gbc.comp3074.mind_manager_app.R;
@@ -47,7 +49,7 @@
         holder.dateTV.setText(bookInfo.getPublishedDate());
 
         // below line is use to set image from URL in our image view.
-        //Picasso.get().load(bookInfo.getThumbnail()).into(holder.bookIV);
+        Picasso.get().load(bookInfo.getThumbnail()).into(holder.bookIV);
 
        //  below line is use to add on click listener for our item of recycler view.
         holder.itemView.setOnClickListener(new View.OnClickListener() {
Index: app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookDetails.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ca.gbc.comp3074.mind_manager_app.Models;\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport ca.gbc.comp3074.mind_manager_app.R;\r\n\r\npublic class BookDetails extends AppCompatActivity {\r\n\r\n    // creating variables for strings,text view, image views and button.\r\n    String title, subtitle, publisher, publishedDate, description, thumbnail, previewLink, infoLink, buyLink;\r\n    int pageCount;\r\n    private ArrayList<String> authors;\r\n\r\n    TextView titleTV, subtitleTV, publisherTV, descTV, pageTV, publishDateTV;\r\n    Button previewBtn, buyBtn;\r\n    private ImageView bookIV;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_book_details);\r\n\r\n        // initializing our views..\r\n        titleTV = findViewById(R.id.idTVTitle);\r\n        subtitleTV = findViewById(R.id.idTVSubTitle);\r\n        publisherTV = findViewById(R.id.idTVpublisher);\r\n        descTV = findViewById(R.id.idTVDescription);\r\n        pageTV = findViewById(R.id.idTVNoOfPages);\r\n        publishDateTV = findViewById(R.id.idTVPublishDate);\r\n        previewBtn = findViewById(R.id.idBtnPreview);\r\n        buyBtn = findViewById(R.id.idBtnBuy);\r\n        bookIV = findViewById(R.id.idIVbook);\r\n\r\n        // getting the data which we have passed from our adapter class.\r\n        title = getIntent().getStringExtra(\"title\");\r\n        subtitle = getIntent().getStringExtra(\"subtitle\");\r\n        publisher = getIntent().getStringExtra(\"publisher\");\r\n        publishedDate = getIntent().getStringExtra(\"publishedDate\");\r\n        description = getIntent().getStringExtra(\"description\");\r\n        pageCount = getIntent().getIntExtra(\"pageCount\", 0);\r\n        thumbnail = getIntent().getStringExtra(\"thumbnail\");\r\n        previewLink = getIntent().getStringExtra(\"previewLink\");\r\n        infoLink = getIntent().getStringExtra(\"infoLink\");\r\n        buyLink = getIntent().getStringExtra(\"buyLink\");\r\n\r\n        // after getting the data we are setting\r\n        // that data to our text views and image view.\r\n        titleTV.setText(title);\r\n        subtitleTV.setText(subtitle);\r\n        publisherTV.setText(publisher);\r\n        publishDateTV.setText(\"Published On : \" + publishedDate);\r\n        descTV.setText(description);\r\n        pageTV.setText(\"No Of Pages : \" + pageCount);\r\n        //Picasso.get().load(thumbnail).into(bookIV);// come back too\r\n\r\n        // adding on click listener for our preview button.\r\n        previewBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (previewLink.isEmpty()) {\r\n                    // below toast message is displayed when preview link is not present.\r\n                    Toast.makeText(BookDetails.this, \"No preview Link present\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                // if the link is present we are opening\r\n                // that link via an intent.\r\n                Uri uri = Uri.parse(previewLink);\r\n                Intent i = new Intent(Intent.ACTION_VIEW, uri);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        // initializing on click listener for buy button.\r\n        buyBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (buyLink.isEmpty()) {\r\n                    // below toast message is displaying when buy link is empty.\r\n                    Toast.makeText(BookDetails.this, \"No buy page present for this book\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                // if the link is present we are opening\r\n                // the link via an intent.\r\n                Uri uri = Uri.parse(buyLink);\r\n                Intent i = new Intent(Intent.ACTION_VIEW, uri);\r\n                startActivity(i);\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookDetails.java	(revision aba6f74d60c7ebd45d079d278091a46577e84d15)
+++ app/src/main/java/ca/gbc/comp3074/mind_manager_app/Models/BookDetails.java	(date 1616608611612)
@@ -64,7 +64,7 @@
         publishDateTV.setText("Published On : " + publishedDate);
         descTV.setText(description);
         pageTV.setText("No Of Pages : " + pageCount);
-        //Picasso.get().load(thumbnail).into(bookIV);// come back too
+        Picasso.get().load(thumbnail).into(bookIV);// come back too
 
         // adding on click listener for our preview button.
         previewBtn.setOnClickListener(new View.OnClickListener() {
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"ca.gbc.comp3074.mind_manager_app\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'com.codepath.libraries:asynchttpclient:0.0.8'\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation files('libs/YouTubeAndroidPlayerApi.jar')\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.facebook.android:facebook-share:5.15.3'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation files('libs/mysql-connector.jar')\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision aba6f74d60c7ebd45d079d278091a46577e84d15)
+++ app/build.gradle	(date 1616605796306)
@@ -24,7 +24,7 @@
 dependencies {
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation 'com.codepath.libraries:asynchttpclient:0.0.8'
-    implementation 'com.squareup.picasso:picasso:2.5.2'
+    implementation 'com.squareup.picasso:picasso:2.71828'
     implementation 'com.android.volley:volley:1.1.1'
     implementation 'androidx.appcompat:appcompat:1.2.0'
     implementation 'androidx.cardview:cardview:1.0.0'
